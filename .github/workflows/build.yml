name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        include:
          - os: macos-latest
            os_name: macos
          - os: ubuntu-latest
            os_name: linux
          - os: windows-latest
            os_name: windows

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1

    - name: Build, Test and Package
      shell: pwsh
      run: ./build.ps1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        NUGET_XMLDOC_MODE: skip

    - uses: codecov/codecov-action@v1
      name: Upload coverage to Codecov
      with:
        file: ./artifacts/coverage.cobertura.xml
        flags: ${{ matrix.os_name }}

    - name: Publish artifacts
      uses: actions/upload-artifact@v1
      with:
        name: artifacts-${{ matrix.os_name }}
        path: ./artifacts

    - name: Create Lambda ZIP file
      if: ${{ runner.os == 'Linux' && (github.ref == 'refs/heads/deploy' || github.ref == 'refs/heads/main') }}
      run: |
        cd "./artifacts/publish" || exit
        chmod +x ./bootstrap
        zip -r "../alexa-london-travel.zip" . || exit 1

    - name: Configure AWS credentials
      #if: ${{ runner.os == 'Linux' && github.ref == 'refs/heads/deploy' }}
      if: ${{ runner.os == 'Linux' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: eu-west-1

    - name: Update function code (dev)
      if: ${{ runner.os == 'Linux' && github.ref == 'refs/heads/deploy' }}
      run: |
        aws lambda update-function-code \
            --function-name alexa-london-travel-dev \
            --publish \
            --zip-file fileb://./artifacts/alexa-london-travel.zip \
            --quiet

    - name: Update function configuration (dev)
      #if: ${{ runner.os == 'Linux' && github.ref == 'refs/heads/deploy' }}
      if: ${{ runner.os == 'Linux' }}
      run: |
        aws lambda update-function-configuration \
            --function-name alexa-london-travel-dev \
            --description "Deploy build ${{ github.run_number }} to AWS Lambda via GitHub Actions" \
            --handler LondonTravel.Skill::MartinCostello.LondonTravel.Skill.AlexaFunction::HandlerAsync \
            --memory-size 256 \
            --role arn:aws:iam::492538393790:role/lambda_basic_execution \
            --runtime provided.al2 \
            --timeout 10 \
            --quiet

    - name: Run end-to-end tests
      if: ${{ runner.os == 'Linux' && github.ref == 'refs/heads/deploy' }}
      shell: pwsh
      run: dotnet test ./test/LondonTravel.Skill.EndToEndTests
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
